
The goal of this assembler is to eventually not be simply an M68K
assembler, but to be relatively easily retargetable.  Also, this
assembler should be callable from other CL applications, as well as
executable as a stand-alone program.


The a.out object format supported here and by st-linker is not really
quite exactly a.out.  It's close, though.



Things to add in the grammar/parser/lexer:

Support for ' (single ASCII character?) -- only because the
	book I have says it's part of Motorola's standard.  Should it
	behave like double-quotes or what?
Support for floats (once FPU instructions are supported).
Line continuations with "\".
Literate input.


Things to add in the assembler:

Checking ranges of types, signed indices, etc.
	Also, type checking information stored in the symbol table.
Output listings (with cycle counts, et cetera).
Support for later chips in the m68k line, and enabling/disabling
	allowance of their added instructions.
Change lookup tables so that on load, they get converted to hash
	tables or whatever's appropriate.
Nifty local labels a-la GNU as or similar.  (0f, 1b, etc)
BRA.S (currently you have to say BRA.B).
CL-style macros?  (that would be cool!)
Debugger info.
Output in object formats other than A.OUT.
Optimizations/data flow analysis.
Optional lispy object format.  (see st-linker README)
ADDI instead of ADD in certain cases.


THINGS TO DO BEFORE RELEASE

- remove debugging output.
- add a decent warning/error display and logging system.
- compile list of known issues, try to resolve.
- put together a basic automated test suite.
  (once object format has settled down, start a set of regression files,
   with sane output verified by hand.)
- skim all XXXs.
- once a better warning system is in place, allow routines like
  MODIFIER-BITS to guess the size of underspecified operations, and warn
  about them at suitable warning levels.
- test with sourcer68 output of various files.
- Things to test about relocation:
	are 8-bit indirect displacements being relocated correctly?
	verify all possible relocation combinations.	
- Update dependencies in ASDF file so that it compiles without warnings.
- *last-label* feels like a hack.  See if there's an alternative.
- add raw binary output.  (also, to linker.)
- DC needs some serious cleanups.
- undo some of the intentional braindamage induced to make us closer
  to devpac.
- various pseudo-ops need to work on list of operands rather than
  single operand.



KNOWN ISSUES

- macro parameters are broken.  At least, <foo> style ones are still
  broken.  [assembler]
- size output is broken if ORG is used. [assembler]
- no checking of vconstraints yet. [codegen]
- Unfinished pseudo-ops:
	EQUR
	DCB
	END
	IFxx
- branch-displacement-bits will behave badly in some unusual situations.
- requires that the file end with a newline, and there is no warning
  that the last line is ignored.


KNOWN MAJOR INCOMPATIBILITIES WITH DEVPAC

These are things which aren't likely to change soon.

Macros:

- we don't support < or > embedded in macro parameters which are
  already wrapped in < and >.  (eg: "<foo>>>>2>" => "foo>>2") [lexer]


ENHANCEMENTS FROM DEVPAC

- We support EXTERN/GLOBAL as synonyms for XREF/XDEF,
  respectively.  Also ALIGN as a simple version of CNOP.

